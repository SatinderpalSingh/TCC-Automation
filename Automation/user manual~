""""""""""""""""""""""""
AUTOMATION INSTALLATION
""""""""""""""""""""""""

NOTE:
# For installing TCC Automation software, make sure that your computer has MYSQL and Django installed.
# This application is tested for Django version 1.4.
# In this documentation, replace the "user name " with the name of your system.
# Also run following command commands in the terminal : 
	sudo apt-get install apache2 libapache2-mod-wsgi

(mod-wsgi is necessary for running the software on localhost using apache.) 
	sudo apt-get installmysql-server python-mysqldb

1. First step to install the TCC Automation software is to download the “TCCAutomation.tar.bz2 “ of office automation from the https://github.com/SatinderpalSingh/TCC-Automation/tree/experimental/Automation Then, extract it and place the extracted folder in the home folder. Change the name of the folder "Automation".

2. Open the Automation folder and make the changes in the apache folder and settings.py file. In apache folder there is a “django.wsgi” file which contains sys.path.append(‘/home/user name/’), in this give  "user name" of your system. In settings.py file,where there is a user name and password, give the user name and the password of your RDBMS. Then open RDBMS(i.e postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle')  and create the database (say "automation") and then again open the settings.py file and change the name of the database as created in the  (say "tcc"). 

	DATABASES = {
		'default': {
        'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'Automation',                      
        'USER': 'root',                    
        'PASSWORD': 'q',
        'HOST': 'localhost',            
        'PORT': '',                      
        }

Also change 'HOST':''  to  'HOST': 'localhost', in the above database.

In the settings.py file change please insure the following things should be right 
	LOCAL_URL = 'http://localhost/'
	and
	MEDIA_URL = 'http://localhost/media/'     

    MEDIA_ROOT = '/usr/local/lib/python2.7/dist-packages/django/contrib/admin/media/'
    {Change the path of media folder to your own path that you follow instead of the path given.)

    Give the path in TEMPLATE_DIRS = (“/home/username/“) in settings.py file of your templates of  Automation application as:
    TEMPLATE_DIRS = ("/home/USER NAME/Automation/templates"                                                
    <replace USER NAME with the    "user name" of your system> 

3. Write the following command in terminal to go into the Automation project:
	cd Automation
        
Then, run the following command in order to create the tables in the database
	python manage.py syncdb



4. Save following text in a file  (/etc/apache2/httpd.conf) Change the path of media folder to your own path that you follow instead of the path given.(instead of goraya give your own user name)
    Alias /media/ /usr/local/lib/python2.7/dist-packages/Django-1.4-py2.7.egg/django/contrib/admin/media/
	<Directory /usr/local/lib/python2.7/dist-packages/Django-1.4-py2.7.egg/django/contrib/admin/media/>
	Options Indexes
	Order deny,allow
	Allow from all
	</Directory>

	WSGIScriptAlias /automation /home/goraya/Automation/apache/django.wsgi
	<Directory /home/goraya/Automation/apache/>
	Order allow,deny
	Allow from all
	</Directory>

5. Then, at last final step is go into the browser and type -http://localhost/automation/. This will open the Automation software in the browser. 
--------------------------------------------------------------------------------------------------------------------------

At the tiFirst step to install the TCC Automation software is to download the “TCCAutomation.tar.bz2 “ of office automation from the https://github.com/SatinderpalSingh/TCC-Automation/tree/experimental/Automation Then, extract it and place the extracted folder in the home folder. Change the name of the folder "Automation".
Open the Automation folder and make the changes in the apache folder and settings.py file. In apache folder there is a “django.wsgi” file which contains sys.path.append(‘/home/user name/’), in this give  "user name" of your system. In settings.py file,where there is a user name and password, give the user name and the password of your RDBMS. Then open RDBMS(i.e postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle')  and create the database (say "automation") and then again open the settings.py file and change the name of the database as created in the  (say "tcc"). 


          DATABASES = {
                  'default': {
                  'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
                  'NAME': 'Automation',                      
                  ' USER': 'root',                    
                  'PASSWORD': 'q',
                  'HOST': 'localhost',            
                  'PORT': '',                      
              }

        also change 'HOST':''  to  'HOST': 'localhost', in the above database.

In the settings.py file change please insure the following things should be right 
          LOCAL_URL = 'http://localhost/'

          and
         MEDIA_URL = 'http://localhost/media/'     

         MEDIA_ROOT = '/usr/local/lib/python2.7/dist-packages/django/contrib/admin/media/'
         {Change the path of media folder to your own path that you follow instead of the path      given.)

     Give the path in TEMPLATE_DIRS = (“/home/username/“) in settings.py file of your templates of  Automation application as:



              TEMPLATE_DIRS = ("/home/USER NAME/Automation/templates"                                                
               <replace USER NAME with the    "user name" of your system> 



    3. Write the following command in terminal to go into the Automation project:

          cd Automation

        Then, run the following command in order to create the tables in the database

          python manage.py syncdb



4. Save following text in a file  (/etc/apache2/httpd.conf) Change the path of media folder to your own path that you follow instead of the path given.(instead of goraya give your own user name)
     

Alias /media/ /usr/local/lib/python2.7/dist-packages/Django-1.4-py2.7.egg/django/contrib/admin/media/

<Directory /usr/local/lib/python2.7/dist-packages/Django-1.4-py2.7.egg/django/contrib/admin/media/>
Options Indexes
Order deny,allow
Allow from all
</Directory>

WSGIScriptAlias /automation /home/goraya/Automation/apache/django.wsgi
<Directory /home/goraya/Automation/apache/>
Order allow,deny
Allow from all
</Directory>

5. Then, at last final step is go into the browser and type -http://localhost/automation/. This will open the Automation software in the browser. me of installation, user should enter his email, user name and password for the super-user account. This account will be further used for the login as the admin of the system.

Application/Libraries required to use the Automation software.
--------------------------------------------------------------

For the use of the software, one should require the registeration module to be installed in the system and its reference should be in the INSTALLED APPLICATION of the system. For this user should check, "registration" written in the INSTALLED APPLICATIONS. Also there it required "tagging" module in the system. If user wants pdf output in from reports, then there will be the need of libraries such as "ReportLab" or "Pissa" installed in the system. 

Log in to the Automation.
-------------------------

After installation to the system open the browser ans write "localhost/automation" into the web-browser for running the Automation on your local server. User should use his username and password for login to the admin settings and admin page will be open by righting,"localhost/automation/admin" in the browser and change the required settings for the system.


